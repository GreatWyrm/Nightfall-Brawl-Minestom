package me.arcanewarrior.com.damage.invulnticks;

import net.minestom.server.MinecraftServer;
import net.minestom.server.entity.Entity;
import net.minestom.server.timer.TaskSchedule;

import java.util.Map;
import java.util.UUID;
import java.util.concurrent.ConcurrentHashMap;

public class InvulnerabilityTicksConcurrentImpl implements InvulnerabilityTicks {

    private final Map<UUID, Integer> tickMap = new ConcurrentHashMap<>();

    public InvulnerabilityTicksConcurrentImpl() {
        MinecraftServer.getSchedulerManager().scheduleTask(() -> {
            for(UUID id : tickMap.keySet()) {
                tickMap.compute(id, (uuid, integer) -> integer - 1);
                if(tickMap.get(id) <= 0) {
                    tickMap.remove(id);
                }
            }
        }, TaskSchedule.immediate(), TaskSchedule.tick(1));
    }


    @Override
    public boolean isEntityInvulnerable(Entity entity) {
        return tickMap.containsKey(entity.getUuid());
    }

    @Override
    public void setInvulnerabilityTicks(Entity entity, int ticks) {
        if(ticks > 0) {
            tickMap.put(entity.getUuid(), ticks);
        }
    }
}
